{
  "openapi": "3.0.1",
  "info": {
    "title": "Parchment APIs",
    "description": "Parchments API documentation for partner integrations, enabling secure e-prescription services",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.dev.parchmenthealth.io/external"
    },
    {
      "url": "https://api.parchmenthealth.io/external"
    }
  ],
  "security": [
    {
      "bearerAuth": [],
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/v1/create-patient": {
      "post": {
        "description": "Creates a new patient in Parchment",
        "requestBody": {
          "description": "Patient data to add to Parchment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPatient"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Patient creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/token": {
      "post": {
        "security": [],
        "description": "Generate an access token for API authentication",
        "parameters": [
          {
            "name": "x-partner-id",
            "in": "header",
            "required": true,
            "description": "Partner ID for authentication - provided by Parchment",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-partner-secret",
            "in": "header",
            "required": true,
            "description": "Partner secret for authentication - provided by Parchment",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-organization-id",
            "in": "header",
            "required": true,
            "description": "Organization ID for authentication - provided by Parchment",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-organization-secret",
            "in": "header",
            "required": true,
            "description": "Organization secret for authentication - provided by Parchment",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "required": true,
            "description": "User ID for authentication - provided by Parchment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Token request parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token generation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/organizations/{organization_id}/users/{user_id}/patients/{patient_id}/prescriptions": {
      "get": {
        "description": "Get prescriptions for a specific patient",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "description": "Organization ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "description": "Patient ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved prescriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientPrescriptionsExternal"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "NewPatient": {
        "type": "object",
        "description": "Patient information to be created",
        "required": [
          "family_name",
          "date_of_birth",
          "sex",
          "email",
          "phone",
          "partner_patient_id"
        ],
        "properties": {
          "ihi_number": {
            "type": "string",
            "description": "Individual Healthcare Identifier"
          },
          "dva_file_number": {
            "type": "string",
            "description": "DVA file number"
          },
          "medicare_card_number": {
            "type": "string",
            "description": "Medicare card number"
          },
          "medicare_irn": {
            "type": "string",
            "description": "Medicare IRN"
          },
          "given_name": {
            "type": "string",
            "description": "Patient's given name"
          },
          "family_name": {
            "type": "string",
            "description": "Patient's family name"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "Patient's date of birth in YYYY-MM-DD format"
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Patient's email address"
          },
          "phone": {
            "type": "string",
            "description": "Patient's phone number"
          },
          "address": {
            "$ref": "#/components/schemas/AustralianAddress"
          },
          "medicare_valid_to": {
            "type": "string",
            "format": "date",
            "description": "Medicare card expiry date"
          },
          "concession_pension_number": {
            "type": "string",
            "description": "Concession or pension number"
          },
          "entitlement_number": {
            "type": "string",
            "description": "Entitlement number"
          },
          "dva_card_color": {
            "$ref": "#/components/schemas/DVA_COLOR"
          },
          "racf_id": {
            "type": "string",
            "description": "RACF identifier"
          },
          "ctg_eligible": {
            "type": "boolean",
            "description": "Closing the Gap eligibility"
          },
          "indigenous_type": {
            "$ref": "#/components/schemas/IndigenousType"
          },
          "partner_patient_id": {
            "type": "string",
            "description": "Partner's unique identifier for the patient"
          }
        }
      },
      "AustralianAddress": {
        "type": "object",
        "required": [
          "street_number",
          "street_name",
          "suburb",
          "state",
          "postcode"
        ],
        "properties": {
          "street_number": {
            "type": "string",
            "description": "Street number"
          },
          "street_name": {
            "type": "string",
            "description": "Street name"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb"
          },
          "state": {
            "$ref": "#/components/schemas/AU_STATE"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          }
        }
      },
      "Sex": {
        "type": "string",
        "enum": ["male", "female", "other", "unknown"],
        "description": "Patient's sex"
      },
      "DVA_COLOR": {
        "type": "string",
        "enum": ["gold", "white", "orange"],
        "description": "DVA card color"
      },
      "IndigenousType": {
        "type": "string",
        "enum": [
          "aboriginal",
          "torres_strait_islander",
          "both",
          "neither",
          "not_stated"
        ],
        "description": "Patient's indigenous status"
      },
      "AU_STATE": {
        "type": "string",
        "enum": ["NSW", "VIC", "QLD", "WA", "SA", "TAS", "ACT", "NT"],
        "description": "Australian state or territory"
      },
      "PatientResponse": {
        "type": "object",
        "required": ["status_code", "message", "partner_patient_id", "url"],
        "properties": {
          "status_code": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "partner_patient_id": {
            "type": "string",
            "description": "Your internal patient id"
          },
          "parchment_patient_id": {
            "type": "string",
            "description": "Parchment's unique identifier for the patient",
            "example": "3b66aa2f-4330-4d77-96fd-9c7d58221495"
          },
          "url": {
            "type": "string",
            "description": "URL to access the patient in Parchment portal",
            "example": "https://portal.parchment.health/dashboard/patients/3b66aa2f-4330-4d77-96fd-9c7d58221495"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "required": ["grantType", "scope"],
        "properties": {
          "grantType": {
            "type": "string",
            "enum": ["client_credentials"],
            "description": "The type of grant to request"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "create:patient",
                "read:patient",
                "update:patient",
                "delete:patient",
                "read:patient_prescription",
                "create:user",
                "read:user",
                "update:user",
                "delete:user"
              ]
            },
            "description": "Array of requested scopes"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "required": ["statusCode", "message", "data"],
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "required": ["accessToken", "expiresIn", "tokenType", "scope"],
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "JWT access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              },
              "expiresIn": {
                "type": "integer",
                "description": "Token expiration time in seconds",
                "example": 3600
              },
              "tokenType": {
                "type": "string",
                "enum": ["Bearer"],
                "description": "Type of token"
              },
              "scope": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "create:patient",
                    "read:patient",
                    "update:patient",
                    "delete:patient",
                    "read:patient_prescription",
                    "create:user",
                    "read:user",
                    "update:user",
                    "delete:user"
                  ]
                },
                "description": "Array of granted scopes"
              }
            }
          }
        }
      },
      "Prescription": {
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "scid": { "type": "string" },
          "created_date": { "type": "string", "format": "date-time" },
          "item_name": { "type": "string" },
          "quantity": { "type": "string" },
          "number_of_repeats_authorised": { "type": "string" },
          "repeat_intervals": { "type": "string" },
          "pbs_code": { "type": "string" },
          "item_strength": { "type": "string" },
          "item_form": { "type": "string" },
          "route_administration": { "type": "string" },
          "pbsdva_authority_number": { "type": "string" },
          "phone_approval_authority_number": { "type": "string" },
          "schedule_number": { "type": "string" },
          "private_prescription": { "type": "boolean" },
          "emergency_supply": { "type": "boolean" },
          "brand_substitution_not_allowed": { "type": "boolean" },
          "reason_for_prescribing": { "type": "string" },
          "patient_instructions": { "type": "string" },
          "doctor_notes": { "type": "string" },
          "pharmacy_name": { "type": "string" },
          "regulation_24": { "type": "boolean" },
          "controlled_substance_reference": { "type": "string" },
          "unusual_dose_flag": { "type": "boolean" },
          "unusual_qty_flag": { "type": "boolean" },
          "my_sl_consent": { "type": "boolean" },
          "send_to_pharmacy": { "type": "string" },
          "unlisted_item_repat_authority": { "type": "boolean" },
          "prescriber_script_number": { "type": "string" }
        }
      },
      "Patient": {
        "type": "object",
        "properties": {
          "given_name": { "type": "string" },
          "family_name": { "type": "string" },
          "date_of_birth": { "type": "string", "format": "date-time" },
          "partner_patient_id": { "type": "string" }
        }
      },
      "Prescriber": {
        "type": "object",
        "properties": {
          "given_name": { "type": "string" },
          "family_name": { "type": "string" }
        }
      },
      "PatientPrescriptionsExternal": {
        "type": "object",
        "properties": {
          "prescriptions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Prescription" }
          },
          "patient": { "$ref": "#/components/schemas/Patient" },
          "prescriber": { "$ref": "#/components/schemas/Prescriber" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-partner-secret"
      }
    }
  }
}
